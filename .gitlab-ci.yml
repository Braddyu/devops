# 定义 stages
stages:
  - build
  - test
  - deploy
#  - apibuild

variables:
  LS_CMD: 'ls $FLAGS $$TMP_DIR'
  FLAGS: '-al'
  FLAGST: 'echo $CI_RUNNER_ID'
  MY_CI_REGISTRY_IMAGE: 192.168.31.92:5000/${CI_PROJECT_NAME}:$CI_BUILD_TAG
  TEST_CI_REGISTRY_IMAGE: 192.168.31.92:5000/cmcc/developer-base:v1.0.1
  
# 定义编译阶段
build_stages:
  stage: build
  script:
#    - docker build -t developer/developer-base:1.01 . 
    - echo $CI_BUILD_TAG
    - echo $MY_CI_REGISTRY_IMAGE
    - export
    - docker
#    - docker build -t $TEST_CI_REGISTRY_IMAGE .
    - if [ "$CI_BUILD_TAG" ]; then  docker build -t $MY_CI_REGISTRY_IMAGE .;fi
#    - if [ -n "${PUSH_TO_REGISTRY}" ]; then docker build -t $MY_CI_REGISTRY_IMAGE .;fi
  tags:
    - dev
# 定义测试阶段
test_stages:
  tags:
    - dev
  stage: test
  script:
    - echo "TEST"
    - echo "test stage"

# 定义部署阶段
release_image:
  tags:
    - dev
  stage: deploy
  script:
    - if [ "$CI_BUILD_TAG" ]; then sudo docker push $MY_CI_REGISTRY_IMAGE ;fi
#    - if [ -n "${PUSH_TO_REGISTRY}" ]; then docker push $MY_CI_REGISTRY_IMAGE ;fi
    
    
#
# 定义部署阶段
#api_build:
#  tags:
#    - dev
#  stage: apibuild
#  before_script:
#    - if [ -n "${API_BUILD}" ]; then MY_CI_REGISTRY_IMAGE=192.168.31.92:5000/${CI_PROJECT_NAME}:${VERISON} ; fi
#  script:
#    - if [ -n "${API_BUILD}" ]; then docker build -t $MY_CI_REGISTRY_IMAGE .;fi
#    - if [ -n "${API_BUILD}" ]; then docker push $MY_CI_REGISTRY_IMAGE ;fi
    
